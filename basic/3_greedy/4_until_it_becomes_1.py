
# 비효율적인버전

# N, K을 공백을 기준으로 구분하여 입력 받기
n, k = map(int, input().split())
result = 0

# 예시
# '25 5' = 2, '17 4' = 3 '25 3' = 6


# N이 K 이상이라면 K로 계속 나누기
while n >= k:
    # N이 K로 나누어 떨어지지 않는다면 N에서 1씩 빼기
    while n % k != 0:
        n -= 1
        result += 1
    # K로 나누기
    n //= k
    result += 1

# 마지막으로 남은 수에 대하여 1씩 빼기(나머지가 k보다 작을경우)
while n > 1:
    n -= 1
    result += 1

print(result)

# N이 현재는 10만 이하임. 근데 100억이상이면 while문에서 n이 1이될때까지 
# 계속 1씩빼주는 반복을 존나많이하기때문에 느려터짐

# ----------------------------------------------------------------------------#
# ----------------------------------------------------------------------------#
# ----------------------------------------------------------------------------#

# 효율적인버전

# '25 5' = 2, '17 4' = 3 '25 3' = 6

# N, K공백을 기준으로 구분하여 입력 받기
n, k = map(int, input().split())

result = 0

while True:
    # N이 K로 나누어 떨어지는 수가 될 때까지만 1씩 빼기
    target = (n // k) * k # 17 4 일경우 (17//4)=4 -> 4*4 = 16
    result += (n - target) # 17 - 16 + 0 = 1
    n = target # 4를 n에다 덮어씌움 = 16
    # N이 K보다 작을 때 (더 이상 나눌 수 없을 때) 반복문 탈출
    if n < k: # 16 < 4 -> false -> break문 무시
        break
    # K로 나누기
    result += 1 # 1 + 1 = 2
    n //= k # 16 // 4 = 4

    # n = 4, k = 4

# 마지막으로 남은 수에 대하여 1씩 빼기
result += (n - 1)
print(result)

